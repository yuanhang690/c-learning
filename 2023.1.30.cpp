#define _CRT_SECURE_NO_WARNINGS 1
//为了准备一个独特的颁奖典礼，组织者在会场的一片矩形区域（可看做是平面直角坐标系的第一象限）铺上一些矩形地毯。
//一共有n 张地毯，编号从1到n。现在将这些地毯按照编号从小到大的顺序平行于坐标轴先后铺设，后铺的地毯覆
//盖在前面已经铺好的地毯之上。地毯铺设完成后，组织者想知道覆盖地面某个点的最上面的那张地毯的编号。
//注意：在矩形地毯边界和四个顶点上的点也算被地毯覆盖。
//输入格式：共n+2行。第一行，一个整数n，表示总共有n 张地毯。
//		  接下来的n 行中，第i + 1 行表示编号i 的地毯的信息，包含四个整数a, b, g, k
//		  每两个整数之间用一个空格隔开，分别表示铺设地毯的左下角的坐标（a，b）
//		  以及地毯在x 轴和y 轴方向的长度
//		  第n+2行表示两个整数x和y表示所求地面的点的坐标（x，y）
// 输出格式：共一行，一个整数表示所求的地毯的编号；若此处没有被地毯覆盖则输出-1
//输入输出样例：
//	输入：3						输出：3
//		  1 0 2 3
//		  0 2 3 3
//		  2 1 3 3
//		  2 2
#include <stdio.h>
int main() {
	int n, i = 0, j = 0, a[10001], b[10001], g[10001], k[10001], x = 0, y = 0, tem = 1;
	int board[10001];//记录地毯编号
	scanf("%d", &n);
	for (i = 0; i < n; i++) {//输入a，b，g，k，以及地毯编号
		scanf("%d%d%d%d", &a[i], &b[i], &g[i], &k[i]);
		board[i] = i;
	}
	scanf("%d%d", &x, &y);
	//运用逆序查找的思想，从n号地毯开始，如果x与y均在范围内直接输出该地毯编号
	for (i = n - 1; i >= 0; i--) {
		if (x >= a[i] && x <= a[i] + g[i] && y >= b[i] && y <= b[i] + k[i]) {
			tem = 0;
			printf("%d", board[i] + 1);//因为输入时从0开始输入的，所以要加1
			break;
		}
	}
	//循环结束tem没被改变说明没有覆盖
	if (tem == 1)
		printf("-1");
	return 0;
}