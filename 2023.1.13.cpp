#include <stdio.h>
int main(){
	
	int n, m, i , j ,k=0, a[6000] = { 0 };/*
	定义数组，以1表示开灯。0为关灯 ,这里表示了一的操作
	，即将所有灯关闭 
	*/ 
	scanf("%d %d", &n, &m);
	for (i = 2; i <= n; i++) {
		if (i % 2 == 0) {
			a[i] = 1;/*二号操作，判断是否为2的倍数并将其打开*/ 
		}
	}
	for (i = 3; i <=n; i++) {//从三号开始操作 
		for (j = 3; j <= m; j++) {
			if (i % j == 0) {
				if (a[i] == 0) {
					a[i] = 1;
				}
				else if (a[i] == 1) {
					a[i] = 0;
				}//判断是否为j号的倍数如果是，且为1，就改为0，为0就改为1 
			}
		}
	}
	for (i = 1; i <= n; i++) {//(关于逗号)看一轮完后多少是关的，用K计数 
		if (a[i] == 0)
			k++;
	}
	
	for (i = 1; i <= n; i++) {
		if (a[i] == 0){
		printf("%d", i);/*一号到n号输出关闭的灯
		k--，k大于0输出‘，’*/
		k--;
		if (k > 0) 
			printf(",");
		}
	}
	return 0;
/*该题更简单解法：输出完全平方数，证明是复制的 
首先，你要知道，对于每一个数n，除非它是完全平方数，否则它一定有偶数个因子。

因为如果i是n的因子，那么n/i也一定是n的因子。例如当n=20时，i=4是20的因子，那么n/i=5也是20的因子

这样，n的因子都是成对出现的，所以n有偶数个因子

但是，有一种特殊情况，即n/i=i。例如4/2=2。由于i和n/i是同一个数，算因子只能是一个，这时n的因子就是奇数个

把n/i=i变形，得n=i*i，即n是完全平方数，所以只有完全平方数有奇数个因子

对于本题，由于灯只有两种状态(开或关,可类比于奇数和偶数),而初始状态是关的

而每个灯泡如果能被人的编号整除，状态就会变化。

把整个过程看成一个整体，也就是只有这一盏灯的因数的编号的人，才会按开关

由于灯的开关按偶数次状态不变，还是关（起始是关），所以，灯的开关只有按奇数次，才会开。

发现问题和上述提到的只有完全平方数有奇数个因子的问题是一样的

也就是如果灯的编号是完全平方数，那么它会被按奇数次，最后就是开着的

输入n轮，所以只需求出<=n的完全平方数就行了。
*/
} 

